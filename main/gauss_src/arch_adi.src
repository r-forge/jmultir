/*
 This file is part of the econometric software package JMulTi.
 Copyright (C) 2000-2005  Helmut Herwartz, Christian Kascha, Markus Kraetzig

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; either version 2
 of the License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * Procedures  Estimation of TGARCH with t-distributed Errors
 */

/**
 * AUTHORS	    
 * PD Dr. Helmut Herwartz     helmut@wiwi.hu-berlin.de
 * Christian Kascha	      christian_kascha@gmx.de
 *
 * Chair of Econometrics
 * Humboldt University Berlin
 * Spandauer Str. 1
 * 10178 Berlin
 * ise.wiwi.hu-berlin.de/oekonometrie/engl/indexeng.html		
 * Berlin, January 2003
 */

/**
 * output:
 * g = intercept | q parameters | likelihood | degfree  
 * S = variance covariance mat
 * tvalues = intercept | q parameters 
 * psi = residuals
 * ivar = variance process
 */
proc(5)=archtdi_wrapper_arch(r,q);

local T,r2,e2,Z,theta,ucvar,g,s1,s,sh,Z0,ivar0,ivar,psi,tvalues;

T=rows(r);
r2=r.*r; 
e2=r2[q+1:T,.];		/* ***** original squared errors ********** */
Z=genZ_arch_arch(r2,T,q); /**** Matrix of squared explanatory errors ***** */

theta=ones(q+1,1)*(0.5/q);	/* ***** Initial Parameters **************** */
theta=8|theta;			/* ***** Initial Parameter Deg. of. F. ***** */
ucvar=sumc(r2)/(T-q);
theta[2,1]=ucvar*(1-0.5);	/* ***** initial value constant term **** */

g=BHHH_arch_arch(r2,q,theta,e2,Z,T,&ableit_archtdi_arch,&LIK_archtdi_arch);

theta=g[1:q+2,.];
S1=Ableit_archtdi_arch(e2,Z,theta);
S=(S1*S1')/T;
S=inv(S)/T;			/* ***** Variance-Covariance Matrix ****** */
SH=diag(S);
SH=sqrt(SH);

tvalues=theta./SH;
/* Reordering degfree to the end */
tvalues=tvalues[2:rows(tvalues),.]|tvalues[1,.];

Z0=genZ0_arch_arch(r2,T,q,ucvar);
ivar0=Z0*theta[2:rows(theta),.];
ivar=Z*theta[2:rows(theta),.];										
ivar=ivar0|ivar;
ivar=sqrt(ivar); /* ***** Vector of implied standard deviations ****** */	

psi=r./ivar;		 /* ***** Residuals ***** */	
g=g[2:rows(g)]|g[1];
retp(g,S,tvalues,psi,ivar);
endp;

/* ******************************************************************************* */
/* ** Estimation of TGARCH with t-distributed Errors using  BHHH-Algorithm ****** */
/*     
INPUT 
			r    (T x 1) 		Vector of Residuals

PARAMETERS 

			q  (1 x 1) 			ARCH - Order

OUTPUT 
			g ((q+3) x 1)		Vector of Parameters starting with degrees of freedom
							then the constant term 
							plus value of log-likelihood at the end

			S ((q+2)x(q+2)) 	Variance-Covariance Matrix

			tvalues ((q+2)x1)	tvalues of parameters

AUTHORS	    PD Dr. Helmut Herwartz	helmut@wiwi.hu-berlin.de
			Christian Kascha		christian_kascha@gmx.de

			Chair of Econometrics
			Humboldt University Berlin
			Spandauer Str. 1
			10178 Berlin
			
			ise.wiwi.hu-berlin.de/oekonometrie/engl/indexeng.html			

			Berlin, January 2003
*/
/* ******************************************************************************** */ 
/* ******************************************************************************** */

/* ******************************************************************************* */
/* ***************** Calculation of Gamma Functions ******************** */
/*
OUTPUT
		z	values of resp. Gamma Functions(1 x 1)
			This is done in order to evaluate numerically the derivatives
			of the Gamma Functions in the pdf. 
*/
/* ******************************************************************************* */
proc(1)=gam1_archtdi_arch(z);
local zz;

zz=gamma((z+1)/2);

retp(zz);
endp;

proc(1)=gam2_archtdi_arch(z2);
local zz;

zz=gamma(z2/2);

retp(zz);
endp;

/* ******************************************************************************* */
/* ***************** Calculation of T-Distribution log-likelihood **************** */
/*
OUTPUT
		loglik	negative Log-likelihood (1 x 1)
*/
/* ******************************************************************************* */
proc(1)=LIK_archtdi_arch(Z,T,q,theta,e2);				

local loglik,b,bb,izv, zv,ga,gaga,bb1,c,v,the;

v=theta[1,1];
ga=gamma((v+1)/2);
gaga=gamma(v/2);
the=theta[2:rows(theta),.];
zv=Z*the;
bb=ln(zv*(v-2)/v);
b=e2./zv;
bb1=v+b*v/(v-2);
bb1=ln(bb1);
bb1=sumc(bb1);

c=ln((v^(v/2)*ga)/(sqrt(pi)*gaga));


loglik=(T-q)*(c)-0.5*sumc(bb)-((v+1)/2)*bb1;
loglik=(-1)*loglik;

if imag(loglik) ne 0;
loglik=0;
endif;


retp(loglik);
endp;                    

/* ******************************************************************************* */
/* ********* Calculation of Derivative of T-Distribution Log-likelihood ************* */
/*
OUTPUT
		ltv		Matrix of Derivatives  ((q+2) x (T-q))
*/
/* ******************************************************************************* */
proc(1) = Ableit_archtdi_arch(e2,Z,theta);

local the,ltv,ltvv,vz,b,b2,siggi1,siggi2,ga,gaga,gagr,gagagr,ga1,i,ltvec,v;


v=theta[1,1];
the=theta[2:rows(theta),.];
vz=Z*the;
siggi1=vz^(-1);
siggi2=vz^(-2);
siggi1=siggi1.*Z;
siggi2=siggi2.*Z;

gagr=gradp(&gam1_archtdi_arch, v);
gagagr=gradp(&gam2_archtdi_arch, v);
ga=gamma((v+1)/2);
ga=ga^(-1);
gaga=gamma(v/2);
gaga=gaga^(-1);
b=v/(v-2);
b2=v+b*e2./vz;

ltvv=0.5*(ln(v)+1-1/(v-2)+1/v)+ga*gagr-gaga*gagagr;

ltvv=ltvv-0.5*ln(b2)-((v+1)/2)*(b2^(-1)).*(1-2/((v-2)^(2))*e2./vz); 



ltv=0.5*(-siggi1+(v+1)*((b2)^(-1)).*b.*(e2.*siggi2));

ltv=ltvv~ltv; 
ltv=ltv';


retp(ltv);
endp;

















